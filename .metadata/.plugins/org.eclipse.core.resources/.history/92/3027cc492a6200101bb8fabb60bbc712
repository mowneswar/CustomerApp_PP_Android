package ios;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileBy;
import io.appium.java_client.MobileElement;
import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.remote.MobileCapabilityType;

public class jumanji {

	public static AppiumDriver<MobileElement> driver;

	@BeforeClass
	public void setUp() throws MalformedURLException, InterruptedException {
		DesiredCapabilities capabilities = new DesiredCapabilities();
		capabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, "iOS");
		capabilities.setCapability(MobileCapabilityType.DEVICE_NAME, "iPhone 16 Pro Max");
		capabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, "18.3");
		capabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, "XCUITest");
		capabilities.setCapability("bundleId", "com.moniic.customer.pp");
		capabilities.setCapability(MobileCapabilityType.NEW_COMMAND_TIMEOUT, "60000");

		driver = new IOSDriver<MobileElement>(new URL("http://192.168.1.15:4723/"), capabilities);
		System.out.println("‚úÖ Connected to iOS device simulator!");
		System.out.println("üöÄ Launched the app on iPhone 16 Pro Max (iOS 18.3.1)");
		Thread.sleep(15000);
	}

	@Test
	public void testOnLetsGoPage() throws InterruptedException {
		MobileElement letsGoBtn = driver.findElementByAccessibilityId("LET'S GO Û∞ÖÇ");
		letsGoBtn.click();
		Thread.sleep(15000);
	}

	@Test
	public void testScrollToIndia() throws InterruptedException {
		scrollAndClickByLabel("India (+91)", 50);
	}

	// üîß Reusable helper method (not a @Test)
	public void scrollAndClickByLabel(String labelValue, int maxScrolls) {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		boolean found = false;

		for (int i = 0; i < maxScrolls; i++) {
			try {
				driver.findElement(MobileBy.iOSNsPredicateString("label CONTAINS '" + labelValue + "'")).click();
				System.out.println("‚úÖ Found and clicked: " + labelValue);
				found = true;
				break;
			} catch (Exception e) {
				System.out.println("üîÅ Scrolling... attempt " + (i + 1));
				Map<String, Object> scrollObject = new HashMap<>();
				scrollObject.put("direction", "down");
				scrollObject.put("predicateString", "label CONTAINS '" + labelValue + "'");
				js.executeScript("mobile: scroll", scrollObject);
			}
		}

		if (!found) {
			System.out.println("‚ùå Element with label '" + labelValue + "' not found after scrolling.");
		}
	}
}