package French_Lang;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.Arrays;

import org.openqa.selenium.interactions.Pause;
import org.openqa.selenium.interactions.PointerInput;
import org.openqa.selenium.interactions.Sequence;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.BeforeClass;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileElement;
import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.remote.MobileCapabilityType;

public class Customer_BaseClass {
	AppiumDriver<MobileElement> driver = null;

    @BeforeClass
    public void setUp() throws MalformedURLException, InterruptedException {
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, "iOS");
        capabilities.setCapability(MobileCapabilityType.DEVICE_NAME, "iPhone 16 Pro Max");
        capabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, "18.3");
        capabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, "XCUITest");
        capabilities.setCapability("bundleId", "com.moniic.customer.pp");
        capabilities.setCapability(MobileCapabilityType.NEW_COMMAND_TIMEOUT, "60000"); 

       
        driver = new IOSDriver<MobileElement>(new URL("http://192.168.1.30:4723/"), capabilities);
        System.out.println("Connected to iOS device simulator!");
        System.out.println("Launched the app on iOS simulator iPhone 16 pro max version 18.3.1");
        Thread.sleep(15000);
    }

    
 
    public void testOnLetsGoPage() throws InterruptedException {
        
    	MobileElement letsGoBtn = driver.findElementByAccessibilityId("LET'S GO ó°…‚");
    	letsGoBtn.click();
        Thread.sleep(5000);
        
        
        
    }
    public void testOnLanguagePage() throws InterruptedException {
    	PointerInput finger = new PointerInput(PointerInput.Kind.TOUCH, "finger");
		Sequence langtap = new Sequence(finger, 1);
		langtap.addAction(finger.createPointerMove(Duration.ofMillis(0),
		    PointerInput.Origin.viewport(), 227, 185));
		langtap.addAction(finger.createPointerDown(PointerInput.MouseButton.LEFT.asArg()));
		langtap.addAction(new Pause(finger, Duration.ofMillis(100)));
		langtap.addAction(finger.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));

		driver.perform(Arrays.asList(langtap));
		Thread.sleep(5000);
    }
    
    public void testOnLetsgetStartedexistAccntPage() throws InterruptedException {
		PointerInput finger = new PointerInput(PointerInput.Kind.TOUCH, "finger");
		Sequence tap = new Sequence(finger, 1);
		tap.addAction(finger.createPointerMove(Duration.ofMillis(0),
		    PointerInput.Origin.viewport(), 227, 185));
		tap.addAction(finger.createPointerDown(PointerInput.MouseButton.LEFT.asArg()));
		tap.addAction(new Pause(finger, Duration.ofMillis(100)));
		tap.addAction(finger.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));

		driver.perform(Arrays.asList(tap));
		Thread.sleep(5000);
	
		
    	driver.findElementByAccessibilityId("5").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("2").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("0").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("0").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("0").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("0").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("9").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("6").click();
    	Thread.sleep(1000);
    	driver.findElementByAccessibilityId("6").click();
    	Thread.sleep(5000);
    	
    	
    	
    	PointerInput ProceedBtn = new PointerInput(PointerInput.Kind.TOUCH, "ProceedBtn");
		Sequence tap2 = new Sequence(ProceedBtn, 1);
		tap2.addAction(ProceedBtn.createPointerMove(Duration.ofMillis(0),
		    PointerInput.Origin.viewport(), 217, 546));
		tap2.addAction(ProceedBtn.createPointerDown(PointerInput.MouseButton.LEFT.asArg()));
		tap2.addAction(new Pause(ProceedBtn, Duration.ofMillis(100)));
		tap2.addAction(ProceedBtn.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));

		driver.perform(Arrays.asList(tap2));
		Thread.sleep(5000);
	}
    
}
